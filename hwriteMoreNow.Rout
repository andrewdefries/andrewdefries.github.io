
R version 3.0.3 (2014-03-06) -- "Warm Puppy"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> ##################
> #system("rm *.sdf")
> #system("rm *.smi")
> #system("rm CLK*")
> system("gzip *.png")
> system("rm *.png")
rm: cannot remove `*.png': No such file or directory
> #system("unzip YAWYE_clean.sdf.gz")
> #system("cp /home/waynebrain/Desktop/YAWYE/YAWYE_clean.sdf .")
> #################
> library(ChemmineR)
> #################
> ##data(sdfsample)
> ##cid(sdfsample)<-sdfid(sdfsample)
> ##sdfset<-sdfsample
> files<-list.files(pattern="RaikhelPNAS.sdf", recursive=F)
> t<-1
> sdfset<-read.SDFset(files[t])
> ###############
> cid(sdfset)<-gsub("_","",sdfid(sdfset))
> apset<-sdf2ap(sdfset)
> #sdfset<-sdfset[!sapply(as(apset,"list"),length)==1]
> #############
> ##############
> 
> #cid(sdfset)<-datablocktag(sdfset, tag="Click_ID")
> #write.SDF(sdfset,file="load_me.sdf", sig=T)
> ###############
> ################
> smiset<-sdf2smiles(sdfset) #(sdfset[1:2])
Using ChemmineOB
> ################
> WriteSdfOut<-function(a){
+ write.SDF(sdfset[[a]], file=paste(cid(sdfset[a]), ".sdf", sep=""), sig=T, cid=T)
+ }
> a<-1:length(smiset) #change to 2 for testing
> lapply(a,WriteSdfOut)
[[1]]
NULL

[[2]]
NULL

[[3]]
NULL

[[4]]
NULL

[[5]]
NULL

[[6]]
NULL

[[7]]
NULL

[[8]]
NULL

[[9]]
NULL

[[10]]
NULL

[[11]]
NULL

[[12]]
NULL

[[13]]
NULL

[[14]]
NULL

[[15]]
NULL

[[16]]
NULL

> ################
> WriteSmiOut<-function(a){
+ cid(smiset)<-gsub("_","",cid(smiset))
+ #cid(smiset)<-cid(sdfset[a])
+ write.SMI(smi=smiset[a], file=paste(cid(sdfset[a]), ".smi", sep=""), cid=T)
+ }
> a<-1:length(smiset) #change to 2 for testing
> lapply(a,WriteSmiOut)
[[1]]
NULL

[[2]]
NULL

[[3]]
NULL

[[4]]
NULL

[[5]]
NULL

[[6]]
NULL

[[7]]
NULL

[[8]]
NULL

[[9]]
NULL

[[10]]
NULL

[[11]]
NULL

[[12]]
NULL

[[13]]
NULL

[[14]]
NULL

[[15]]
NULL

[[16]]
NULL

> ###############
> system("for i in *.smi
+ do babel $i -O $i.png 
+ done")
1 molecule converted
48 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
52 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
1 molecule converted
49 audit log messages 
> ###############
> #source("hwriteMoreTable.R") #works
> source("hwriteMore.R") #fixed
> ###############
> #system("firefox test.html")
> ###############
> #to do
> #add smiles field
> #add links to wikipedia page from chembrain repo
> #fix ChemmineR problem to export cid of smiset
> #use trimNeihbors of nnm to print each clid with min members in rgl space
> #highlight compounds in cluster and print cid in webGL out
> 
> proc.time()
   user  system elapsed 
  1.708   0.160   1.913 
